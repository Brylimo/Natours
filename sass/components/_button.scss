// components (reusable, building block)

.btn {
    &:link, 
    &:visited {
        text-transform: uppercase;
        text-decoration: none;
        padding: 1.5rem 4rem;
        display: inline-block;
        border-radius: 10rem;
        transition: all .2s;
        position: relative;
        font-size: $default-font-size;
    }

    /* box-shadow: <수평 거리> <수직 거리> <흐림 정도> <번짐 정도> <색상> 
    <흐림 정도>는 값이 커질수록 부드러운 그림자를 표시함*/
    &:hover {
        transform: translateY(-.3rem); /*related to the initial link & visited state*/
        box-shadow: 0 1rem 2rem rgba($color-black,.2);

        &::after {
            transform: scaleX(1.4) scaleY(1.6);
            opacity: 0;
        }
    }

    &:active {
        transform: translateY(-.1rem); /* (!important) related to the initial state which is link & visited part not hover part*/
        box-shadow: 0 .5rem 1rem rgba($color-black,.2);
    }

    &--white {
        background-color: $color-white;
        color: $color-grey-dark;

        &::after {
            background-color: $color-white;
        }    
    }

    &--green {
        background-color: $color-primary;
        color: $color-white;

        &::after {
            background-color: $color-primary;
        }    
    }
    /* (!).btn의 child로 새로 삽입됨(기본적으로 inline) */
    &::after {
        content: ""; /* ::after 뒤에는 content가 무조건 들어가야함 */
        display: inline-block;
        height: 100%; /*::after은 btn의 child로 삽입되므로 가능 */
        width: 100%;
        border-radius: 10rem;
        position: absolute;
        top: 0;
        left: 0;
        z-index: -1;
        transition: all .4s;
    }

    &--animated {
        animation: moveInBottom .5s ease-out .75s;
        animation-fill-mode: backwards; /*animation이 시작하기 전에 처음 0%부터 시작할 수 있도록 한다*/
    }
}

.btn-text {
    &:link,
    &:visited {
        font-size: $default-font-size;
        color: $color-primary;
        display: inline-block;
        text-decoration: none;
        border-bottom: 1px solid $color-primary;
        padding: 3px;
        transition: all .2s;
    }

    &:hover {
        background-color: $color-primary;
        color: $color-white;
        box-shadow: 0 1rem 2rem rgba($color-black, .15);
        transform: translateY(-2px);
    }

    &:active {
        box-shadow: 0 .5rem 1rem rgba($color-black, .15);
        transform: translateY(0);
    }
}